diff --git a/captcha/image_captcha/src/Response/CaptchaImageResponse.php b/captcha/image_captcha/src/Response/CaptchaImageResponse.php
index a55a87d..d51c796 100755
--- a/captcha/image_captcha/src/Response/CaptchaImageResponse.php
+++ b/captcha/image_captcha/src/Response/CaptchaImageResponse.php
@@ -56,7 +56,7 @@ class CaptchaImageResponse extends Response {
   /**
    * {@inheritdoc}
    */
-  public function __construct(Config $config, LoggerInterface $logger, Connection $connection, FileSystemInterface $fileSystem, $callback = NULL, $status = 200, $headers = []) {
+  public function __construct(Config $config, LoggerInterface $logger, Connection $connection, FileSystemInterface $fileSystem, $status = 200, $headers = []) {
     parent::__construct(NULL, $status, $headers);
 
     $this->config = $config;
@@ -68,7 +68,7 @@ class CaptchaImageResponse extends Response {
   /**
    * {@inheritdoc}
    */
-  public function prepare(Request $request) {
+  public function prepare(Request $request): static {
     $session_id = $request->get('session_id');
 
     $code = $this->connection
@@ -92,7 +92,7 @@ class CaptchaImageResponse extends Response {
   /**
    * {@inheritdoc}
    */
-  public function sendHeaders() {
+  public function sendHeaders(): static {
     if ($this->config->get('image_captcha_file_format') == IMAGE_CAPTCHA_FILE_FORMAT_JPG) {
       $this->headers->set('content-type', 'image/jpeg');
     }
@@ -107,9 +107,9 @@ class CaptchaImageResponse extends Response {
   /**
    * {@inheritdoc}
    */
-  public function sendContent() {
+  public function sendContent(): static {
     if (!$this->image) {
-      return;
+      return $this;
     }
 
     // Begin capturing the byte stream.
@@ -124,6 +124,7 @@ class CaptchaImageResponse extends Response {
     }
     // Clean up the image resource.
     imagedestroy($this->image);
+    return $this;
   }
 
   /**
diff --git a/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php b/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
index 4fe5388..8804b5a 100755
--- a/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
+++ b/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
@@ -27,7 +27,7 @@ class CaptchaFontPreviewStreamedResponse extends StreamedResponse {
   /**
    * {@inheritdoc}
    */
-  public function __construct(ImmutableConfig $config, $token, $callback = NULL, $status = 200, $headers = []) {
+  public function __construct(ImmutableConfig $config, $token, $status = 200, $headers = []) {
     parent::__construct(NULL, $status, $headers);
 
     $this->config = $config;
@@ -37,7 +37,7 @@ class CaptchaFontPreviewStreamedResponse extends StreamedResponse {
   /**
    * {@inheritdoc}
    */
-  public function sendContent() {
+  public function sendContent(): static {
     // Get the font from the given font token.
     if ($this->token == 'BUILTIN') {
       $font = 'BUILTIN';
@@ -46,13 +46,13 @@ class CaptchaFontPreviewStreamedResponse extends StreamedResponse {
       // Get the mapping of font tokens to font file objects.
       $fonts = $this->config->get('image_captcha_fonts_preview_map_cache');
       if (!isset($fonts[$this->token])) {
-        return 'bad token';
+        throw new \LogicException('bad token');
       }
       // Get the font path.
       $font = $fonts[$this->token]['uri'];
       // Some sanity checks if the given font is valid.
       if (!is_file($font) || !is_readable($font)) {
-        return 'bad font';
+        throw new \LogicException('bad font');
       }
     }
 
@@ -85,6 +85,7 @@ class CaptchaFontPreviewStreamedResponse extends StreamedResponse {
     imagepng($image);
     // Release image memory.
     imagedestroy($image);
+    return $this;
   }
 
 }
diff --git a/captcha/src/Form/CaptchaPointForm.php b/captcha/src/Form/CaptchaPointForm.php
index 5edb754..c403cce 100755
--- a/captcha/src/Form/CaptchaPointForm.php
+++ b/captcha/src/Form/CaptchaPointForm.php
@@ -113,13 +113,16 @@ class CaptchaPointForm extends EntityForm {
       $this->messenger()->addMessage($this->t('Captcha Point for %form_id form was created.', [
         '%form_id' => $captcha_point->getFormId(),
       ]));
+      $form_state->setRedirect('captcha_point.list');
+      return SAVED_NEW;
     }
     else {
       $this->messenger()->addMessage($this->t('Captcha Point for %form_id form was updated.', [
         '%form_id' => $captcha_point->getFormId(),
       ]));
+      $form_state->setRedirect('captcha_point.list');
+      return SAVED_UPDATED;
     }
-    $form_state->setRedirect('captcha_point.list');
   }
 
 }
diff --git a/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php b/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
index 3ac3fd5..89e7567 100644
--- a/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
+++ b/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
@@ -57,9 +57,6 @@ class MigrateCaptchaPointsTest extends MigrateDrupal7TestBase {
       'd7_captcha_points',
     ];
     $this->executeMigrations($migrations);
-
-    $this->captchaStorage = $this->container->get('entity_type.manager')
-      ->getStorage('captcha_point');
   }
 
   /**
